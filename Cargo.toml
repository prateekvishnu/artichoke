[package]
name = "artichoke"
version = "0.1.0-pre.0"
authors = ["Ryan Lopopolo <rjl@hyperbo.la>"]
license = "MIT"
edition = "2021"
rust-version = "1.62.0"
readme = "README.md"
repository = "https://github.com/artichoke/artichoke"
documentation = "https://artichoke.github.io/artichoke/artichoke/"
homepage = "https://github.com/artichoke/artichoke"
description = """
artichoke is a Ruby 2.6.3 implementation. Artichoke supports embedding and
conditional compilation of the VM and standard library. Artichoke can be used to
distribute Ruby applications as single-binary artifacts. Artichoke builds on
Windows, macOS, and Linux, as well as WebAssembly via Emscripten.
"""
keywords = ["artichoke", "artichoke-ruby", "mri", "cruby", "ruby"]
categories = ["command-line-utilities"]

[dependencies]
clap = { version = "3.2.5", optional = true, default-features = false, features = ["std", "suggestions"] }
# XXX: load-bearing unused dependency.
#
# `rustyline` improperly declares its minimum version on `log` as `0.4` despite
# requiring `>=0.4.5` to compile. Link in at least the minimum version here so
# cargo pulls in at least 0.4.5, e.g. when using `-Zminimal-versions`.
#
# Upstream has not been willing to merge a patch to fix this, so hack around it
# here.
#
# See: https://github.com/kkawakam/rustyline/pull/583
log = { version = "0.4.5", optional = true }
rustyline = { version = "9.1.2", optional = true, default-features = false }
termcolor = { version = "1.1.0", optional = true }

[dependencies.artichoke-backend]
version = "0.13.0"
path = "artichoke-backend"
default-features = false

[build-dependencies]
tz-rs = { version = "0.6.9", default-features = false }

[[bin]]
name = "airb"
path = "src/bin/airb.rs"
required-features = ["cli"]

[[bin]]
name = "artichoke"
path = "src/bin/artichoke.rs"
required-features = ["cli"]

[workspace]
members = [
  "artichoke-backend",
  "artichoke-core",
  "artichoke-load-path",
  "mezzaluna-feature-loader",
  "scolapasta-hex",
  "scolapasta-string-escape",
  "spinoso-array",
  "spinoso-env",
  "spinoso-exception",
  "spinoso-math",
  "spinoso-random",
  "spinoso-regexp",
  "spinoso-securerandom",
  "spinoso-string",
  "spinoso-symbol",
  "spinoso-time",
]

[profile.release]
codegen-units = 1
lto = true

[features]
default = [
  "backtrace",
  "cli",
  "kitchen-sink",
]
# Enable a CLI frontend for Artichoke, including a `ruby`-equivalent CLI and
# REPL.
cli = ["backtrace", "dep:clap", "dep:log", "dep:rustyline"]
# Enable a module for formtting backtraces from Ruby exceptions.
backtrace = ["dep:termcolor"]
# Enable all features of Ruby Core, Standard Library, and the underlying VM.
kitchen-sink = [
  "core-full",
  "load-path-native-file-system-loader",
  "load-path-rubylib-native-file-system-loader",
  "stdlib-full",
]

# Enable every API in Ruby Core
core-full = [
  "core-env",
  "core-env-system",
  "core-math",
  "core-math-full",
  "core-random",
  "core-regexp",
  "core-regexp-oniguruma",
  "core-time",
]
# Enable resolving environment variables with the `ENV` core object.
core-env = ["artichoke-backend/core-env"]
# Enable resolving environment variables with the `ENV` core object using native
# OS APIs. This feature replaces the in-memory backend with `std::env`.
core-env-system = ["core-env", "artichoke-backend/core-env-system"]
# Enable the `Math` module in Ruby Core.
core-math = ["artichoke-backend/core-math"]
# Enable an extra dependency on `libm` to implement some `Math` core APIs for
# functions not present in `std`.
core-math-full = ["core-math", "artichoke-backend/core-math-full"]
# Implement the `Random` core class and add an interpreter-default PRNG to
# Artichoke. This feature adds dependencies on `rand_core` and `rand_pcg`.
core-random = ["artichoke-backend/core-random"]
# Implement the `Regexp` and `MatchData` core classes. This feature adds a
# dependency on `regex`.
core-regexp = ["artichoke-backend/core-regexp"]
# Enable an oniguruma engine backend to the `Regexp` core class. With this
# feature, Regexp patterns must be parsable by oniguruma regardless of the
# backend they execute on. The `regex` crate backend remains the default as long
# as it can parse the given pattern.
core-regexp-oniguruma = ["core-regexp", "artichoke-backend/core-regexp-oniguruma"]
# Implement the `Time` core class. This feature adds dependencies on `chrono`
# and `chrono-tz`.
core-time = ["artichoke-backend/core-time"]

# Extend the Artichoke virtual file system to have native/host access.
#
# This feature enables requiring sources from local disk.
load-path-native-file-system-loader = ["artichoke-backend/load-path-native-file-system-loader"]
# Extend the Artichoke virtual file system to search a path separator-delimited
# list of paths for Ruby sources by parsing the `RUBYLIB` environment variable.
#
# This feature enables requiring sources from local disk.
load-path-rubylib-native-file-system-loader = ["load-path-native-file-system-loader", "artichoke-backend/load-path-rubylib-native-file-system-loader"]

# Override the `stdout` and `stdin` streams to write to an in-memory buffer.
output-strategy-capture = ["artichoke-backend/output-strategy-capture"]
# Override the `stdout` and `stdin` streams to write to be discarded.
# `output-strategy-null` implies the `output-strategy-capture` feature.
output-strategy-null = ["output-strategy-capture", "artichoke-backend/output-strategy-null"]

# Enable every integrated standard library package.
stdlib-full = [
  "stdlib-abbrev",
  "stdlib-base64",
  "stdlib-cmath",
  "stdlib-delegate",
  "stdlib-forwardable",
  "stdlib-json",
  "stdlib-monitor",
  "stdlib-ostruct",
  "stdlib-securerandom",
  "stdlib-set",
  "stdlib-shellwords",
  "stdlib-strscan",
  "stdlib-time",
  "stdlib-uri",
]
stdlib-abbrev = ["artichoke-backend/stdlib-abbrev"]
stdlib-base64 = ["artichoke-backend/stdlib-base64"]
stdlib-cmath = ["artichoke-backend/stdlib-cmath"]
stdlib-delegate = ["artichoke-backend/stdlib-delegate"]
stdlib-forwardable = ["artichoke-backend/stdlib-forwardable"]
stdlib-json = ["artichoke-backend/stdlib-json"]
stdlib-monitor = ["artichoke-backend/stdlib-monitor"]
stdlib-ostruct = ["artichoke-backend/stdlib-ostruct"]
# Implement the `SecureRandom` Standard Library package. This feature adds
# dependencies on `base64`, `rand`, `rand_core`.
stdlib-securerandom = ["artichoke-backend/stdlib-securerandom"]
stdlib-set = ["artichoke-backend/stdlib-set"]
stdlib-shellwords = ["artichoke-backend/stdlib-shellwords"]
stdlib-strscan = ["artichoke-backend/stdlib-strscan"]
stdlib-time = ["artichoke-backend/stdlib-time"]
stdlib-uri = ["artichoke-backend/stdlib-uri"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
