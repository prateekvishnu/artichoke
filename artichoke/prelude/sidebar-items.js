window.SIDEBAR_ITEMS = {"enum":[["IncrementLinenoError","Errors encountered when incrementing line numbers on parser state."],["Ruby","Classes of Ruby types."],["Rust","Classes of Rust types."]],"mod":[["error",""],["mruby","FFI glue between the Rust trampolines and the mruby C interpreter."]],"struct":[["ArgumentError","Ruby `ArgumentError` error type."],["Artichoke","Interpreter instance."],["EOFError","Ruby `EOFError` error type."],["EncodingError","Ruby `EncodingError` error type."],["Error",""],["Exception","Ruby `Exception` error type."],["Fatal","Ruby `fatal` error type."],["FiberError","Ruby `FiberError` error type."],["FloatDomainError","Ruby `FloatDomainError` error type."],["FrozenError","Ruby `FrozenError` error type."],["Guard","Interpreter guard that prepares an [`Artichoke`] to re-enter an FFI boundary."],["IOError","Ruby `IOError` error type."],["IndexError","Ruby `IndexError` error type."],["Interrupt","Ruby `Interrupt` error type."],["KeyError","Ruby `KeyError` error type."],["LoadError","Ruby `LoadError` error type."],["LocalJumpError","Ruby `LocalJumpError` error type."],["NameError","Ruby `NameError` error type."],["NoMemoryError","Ruby `NoMemoryError` error type."],["NoMethodError","Ruby `NoMethodError` error type."],["NotImplementedError","Ruby `NotImplementedError` error type."],["RangeError","Ruby `RangeError` error type."],["RegexpError","Ruby `RegexpError` error type."],["ReleaseMetadata",""],["RuntimeError","Ruby `RuntimeError` error type."],["ScriptError","Ruby `ScriptError` error type."],["SecurityError","Ruby `SecurityError` error type."],["SignalException","Ruby `SignalException` error type."],["StandardError","Ruby `StandardError` error type."],["StopIteration","Ruby `StopIteration` error type."],["SyntaxError","Ruby `SyntaxError` error type."],["SystemCallError","Ruby `SystemCallError` error type."],["SystemExit","Ruby `SystemExit` error type."],["SystemStackError","Ruby `SystemStackError` error type."],["ThreadError","Ruby `ThreadError` error type."],["TypeError","Ruby `TypeError` error type."],["UncaughtThrowError","Ruby `UncaughtThrowError` error type."],["ZeroDivisionError","Ruby `ZeroDivisionError` error type."]],"trait":[["ClassRegistry","Define and store class specs on an interpreter."],["CoerceToNumeric","Coerce Ruby values to native numerics (floats and integers)."],["Convert","Infallible conversion between two types."],["ConvertMut","Mutable infallible conversion between two types."],["Debug","Debugging and `Exception` message support."],["DefineConstant","Define constants on an interpreter."],["Eval","Execute code and retrieve its result."],["File","Rust extension hook that can be required."],["Globals","Get and set global variables on an interpreter."],["Hash","A trait for retrieving an interpreter-global [`BuildHasher`]."],["Intern","Store and retrieve byte strings that have the same lifetime as the interpreter."],["Io","Perform I/O external to the interpreter."],["LoadSources","Load Ruby sources and Rust extensions into an interpreter."],["ModuleRegistry","Define and store module specs on an interpreter."],["MrbGarbageCollection","Garbage collection primitives for an mruby interpreter."],["Parser","Manage parser state, active filename context, and line number metadata."],["Prng","Interpreter global pseudorandom number generator (PRNG)."],["Regexp","Track the state of `Regexp` special global variables and global interpreter state."],["RubyException","Polymorphic exception type that corresponds to Rubyâ€™s `Exception`."],["TopSelf","Return a `Value`-wrapped reference to top self."],["TryConvert","Fallible conversions between two types."],["TryConvertMut","Mutable fallible conversions between two types."],["Value","A boxed Ruby value owned by the interpreter."],["Warn","Emit warnings during interpreter execution to stderr."]]};