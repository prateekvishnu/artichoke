# This config file lists the ruby/specs that should pass for Artichoke Ruby.
#
# Valid values for `include` are:
#
# - all - run all specs. When `include` is set to `all`, the optional `skip`
#   field may list specs to skip.
# - none - run no specs, equivalent to the section not being present in this
#   config file.
# - `set` - run an enumerated set of specs. When `include` is set to `set`, the
#   set of specs must be listed in the required `specs` field, which is a list
#   of strings.

## Ruby Core

[specs.core.array]
include = "set"
specs = [
  "any",
  "append",
  "array",
  "assoc",
  "at",
  "clear",
  "collect",
  "combination",
  "compact",
  "concat",
  "constructor",
  "count",
  "cycle",
  "delete",
  "delete_at",
  "delete_if",
  "drop",
  "drop_while",
  "each",
  "each_index",
  "empty",
  "first",
  "frozen",
  "include",
  "last",
  "length",
  "map",
  "multiply",
  "plus",
  "prepend",
  "push",
  "rassoc",
  "replace",
  "reverse",
  "reverse_each",
  "shift",
  "size",
  "sort_by",
  "to_ary",
  "try_convert",
  "unshift",
]

[specs.core.builtin_constants]
include = "all"

[specs.core.comparable]
include = "all"

[specs.core.env]
include = "all"
skip = [
  # missing `Errno::EINVAL` implementation
  "element_set",
  # missing `Errno::EINVAL` implementation
  "store",
  # `Hash#values_at` is not implemented
  "values_at",
]

[specs.core.kernel]
include = "set"
specs = ["Integer"]

[specs.core.matchdata]
include = "all"

[specs.core.math]
include = "all"
skip = [
  # missing support for Bignum
  "gamma",
  # missing support for Bignum
  "log2",
]

[specs.core.regexp]
include = "all"

[specs.core.string]
include = "set"
specs = [
  "bytesize",
  # `Range` of int, e.g. `1..9`, does not call `#to_int` on start and end.
  #
  # ```
  # String#byteslice with Range calls to_int on range arguments
  # TypeError: MockObject cannot be converted to Integer
  #
  # /artichoke/virtual_root/src/lib/core/string/shared/slice.rb:266:in byteslice
  # /artichoke/virtual_root/src/lib/core/string/shared/slice.rb:266:in protect
  # (eval):165:in all?
  # (eval):590:in each
  # /artichoke/virtual_root/src/lib/core/string/byteslice_spec.rb:18
  # (eval):590:in each
  # /artichoke/virtual_root/src/lib/spec_runner.rb:74:in run_specs
  # (eval):1
  #
  # An exception occurred during: Mock.verify_count
  # String#byteslice with Range calls to_int on range arguments
  # SpecExpectationNotMetError: Mock 'from' expected to receive <=>(:any_args) exactly 2 times
  # but received it 1 times
  #
  # (eval):590:in each
  # (eval):186:in each
  # (eval):165:in all?
  # (eval):590:in each
  # /artichoke/virtual_root/src/lib/core/string/byteslice_spec.rb:18
  # (eval):590:in each
  # /artichoke/virtual_root/src/lib/spec_runner.rb:74:in run_specs
  # (eval):1
  # ```
  #
  # "byteslice",
  # `chomp` and `chop` have some improper separator handling
  #
  # "chomp",
  # "chop",
  "clear",
  "delete_prefix",
  "empty",
  "end_with",
  "getbyte",
  "include",
  "length",
  "reverse",
  "scan",
  "setbyte",
  "size",
  "start_with",
  "tr",
  "tr_s",
]

[specs.core.symbol]
include = "all"
skip = [
  # Requires investments to Unicode support in `String` and Unicode titlecase
  # support, which does not exist in `core` or `std`.
  "capitalize",
  # Requires investments to Unicode support in `String`
  "downcase",
  # Depends on `Regexp` indexing fixes
  "element_reference",
  # fails with an mruby `SyntaxError`
  # upstream bug: https://github.com/mruby/mruby/issues/5055
  # spinoso-symbol ported these test cases to Rust tests, which pass.
  "inspect",
  # Depends on `Regexp` indexing fixes
  "slice",
  # Requires investments to Unicode support in `String`
  "upcase",
]

## Ruby Standard Library

[specs.library.abbrev]
include = "all"

[specs.library.base64]
include = "all"

[specs.library.delegate]
include = "none"

[specs.library.monitor]
include = "all"

[specs.library.securerandom]
include = "all"
skip = [
  # missing support for Bignum and Range arguments
  "random_number",
]

[specs.library.shellwords]
include = "all"
skip = [
  # missing `String#gsub` support for back references
  "shellwords",
]

[specs.library.stringscanner]
include = "all"

[specs.library.time]
# missing `date` package
include = "none"

[specs.library.uri]
include = "all"
skip = ["parse"]

