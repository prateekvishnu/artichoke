window.SIDEBAR_ITEMS = {"enum":[["IncrementLinenoError","Errors encountered when incrementing line numbers on parser state."],["Ruby","Classes of Ruby types."],["Rust","Classes of Rust types."]],"trait":[["ClassRegistry","Define and store class specs on an interpreter."],["CoerceToNumeric","Coerce Ruby values to native numerics (floats and integers)."],["Convert","Infallible conversion between two types."],["ConvertMut","Mutable infallible conversion between two types."],["Debug","Debugging and `Exception` message support."],["DefineConstant","Define constants on an interpreter."],["Eval","Execute code and retrieve its result."],["File","Rust extension hook that can be required."],["Globals","Get and set global variables on an interpreter."],["Hash","A trait for retrieving an interpreter-global [`BuildHasher`]."],["Intern","Store and retrieve byte strings that have the same lifetime as the interpreter."],["Io","Perform I/O external to the interpreter."],["LoadSources","Load Ruby sources and Rust extensions into an interpreter."],["ModuleRegistry","Define and store module specs on an interpreter."],["Parser","Manage parser state, active filename context, and line number metadata."],["Prng","Interpreter global pseudorandom number generator (PRNG)."],["Regexp","Track the state of `Regexp` special global variables and global interpreter state."],["ReleaseMetadata","Information about an Artichoke build."],["TopSelf","Return a `Value`-wrapped reference to top self."],["TryConvert","Fallible conversions between two types."],["TryConvertMut","Mutable fallible conversions between two types."],["Value","A boxed Ruby value owned by the interpreter."],["Warn","Emit warnings during interpreter execution to stderr."]]};