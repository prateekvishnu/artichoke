window.SIDEBAR_ITEMS = {"constant":[["HIGHEST_MATCH_GROUP","The highest group matched by the last successful match."],["LAST_MATCH","The information about the last match in the current scope."],["LAST_MATCHED_STRING","The string matched by the last successful match."],["STRING_LEFT_OF_MATCH","The string to the left of the last successful match."],["STRING_RIGHT_OF_MATCH","The string to the right of the last successful match."]],"enum":[["Encoding","The encoding of a Regexp literal."],["RegexpOption","The state of a Regexp engine flag in [`Options`]."]],"fn":[["clear_capture_globals",""],["nth_match_group","Global variable name for the nth capture group from a `Regexp` match."]],"mod":[["backend",""],["enc","Parse encoding parameter to `Regexp#initialize` and `Regexp::compile`."],["mruby",""],["opts","Parse options parameter to `Regexp#initialize` and `Regexp::compile`."],["pattern","Regexp pattern parsers."],["syntax","Helpers for parsing Regexp patterns."],["trampoline",""]],"struct":[["Config","A `Config` represents the parsed, expanded, and normalized pattern and options used to initialize a `Regexp`."],["Flags",""],["InvalidEncodingError",""],["Options","Configuration options for Ruby Regexps."],["Regexp",""],["RegexpError","Error that indicates a `Regexp` was malformed at runtime."],["Source","A `Source` represents the literal contents used to construct a given `Regexp`."]],"type":[["NameToCaptureLocations",""]]};